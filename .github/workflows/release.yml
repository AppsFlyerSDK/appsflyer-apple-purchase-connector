name: Release on Merge

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  release:
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'releases/')
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: extract_version
        run: |
          VERSION=$(echo "${{ github.event.pull_request.head.ref }}" \
                    | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' \
                    | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Ensure XCFrameworks present
        run: |
          # Verify primary XCFramework
          if [ ! -d PurchaseConnector.xcframework ]; then
            echo "ERROR: PurchaseConnector.xcframework missing" >&2
            exit 1
          fi
          # Verify dynamic variant
          if [ ! -d Dynamic/PurchaseConnector.xcframework ]; then
            echo "ERROR: Dynamic/PurchaseConnector.xcframework missing" >&2
            exit 1
          fi

      - name: Update Carthage JSONs
        run: ./scripts/update_carthage.sh "${{ env.VERSION }}"

      - name: Update Podspec
        run: ./scripts/update_podspec.sh "${{ env.VERSION }}"

      - name: Update Swift Package manifest
        run: ./scripts/update_spm.sh "${{ env.VERSION }}"

      - name: Commit bumped manifests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Carthage/*.json PurchaseConnector.podspec Package.swift
          git commit -m "chore: bump version to v${{ env.VERSION }}"
          git push

      - name: Create annotated tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Draft GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to CocoaPods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          gem install cocoapods
          pod repo update
          pod trunk push PurchaseConnector.podspec --allow-warnings --use-libraries
